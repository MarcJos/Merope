//! Copyright : see license.txt
//!
//! \brief
//

#include "../../AlgoPacking/src/StdHeaders.hxx"

#include "Mesh/GmshWriter.hxx"


#include "MeropeNamespace.hxx"


namespace merope {

void mesh::gmsh_writer::auxi::writePreamble(std::ostream& f) {
    f << "// File automatically generated by Merope \n";
    f << R"(//SetFactory("OpenCASCADE");)" << "\n";
    f << "// Ask OpenCASCADE to compute more accurate bounding boxes of entities using the \n";
    f << "// STL mesh: \n";
    f << "//Geometry.OCCBoundsUseStl = 1;\n";
    f << mesh_size << " = " << 0 << "; // WARNING : Default value. Correct value is at the end of the script.\n";
}

void mesh::gmsh_writer::auxi::writeEnd(std::ostream& f, double meshSize, size_t meshOrder, bool binaryOutput) {
    f << endl;
    f << "MeshSize {:} =" << meshSize << ";\n";
    f << endl;
    f << "Mesh.ElementOrder =" << meshOrder << ";\n";
    f << "Mesh 2;\n";
    f << "Mesh 3;\n";
    if (binaryOutput) {
        f << "Mesh.Binary=1;\n";
    }
    // save
    f << "Mesh.MshFileVersion = 2.2;\n";
    f << R"(Save "Maillage.med";)" << "\n";
    f << R"(Save "many_spheres.msh";)" << "\n";
}

} // namespace merope

