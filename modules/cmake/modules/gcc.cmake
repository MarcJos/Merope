# Options de base
macro(add_cxx_flag flag)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${flag} -fPIC")
endmacro(add_cxx_flag)

if(MEROPE_WARNING)
	message("Warning enabled")
	add_cxx_flag("-std=c++2a -fconcepts -Wall -W -Wextra -pedantic -Wshadow")
	add_cxx_flag("-Wpointer-arith -Wcast-qual -Wcast-align")
	add_cxx_flag("-Wwrite-strings -Wctor-dtor-privacy -Wnon-virtual-dtor")
	add_cxx_flag("-Woverloaded-virtual -Wreturn-type -Wfloat-equal")
	add_cxx_flag("-Wno-endif-labels -Wsign-compare -Wmissing-format-attribute")
	add_cxx_flag("-Wno-multichar -Wno-deprecated-declarations -Wpacked")
	add_cxx_flag("-Wredundant-decls -Wlong-long")
	add_cxx_flag("-Wunknown-pragmas -Wundef -Wreorder")
	add_cxx_flag("-Wno-conversion -Wdouble-promotion -Winit-self -Wlogical-op -Wmissing-include-dirs -Wnoexcept -Wold-style-cast -Wstrict-null-sentinel -Wtrampolines -Wvector-operation-performance -Wignored-qualifiers -Wsequence-point")
	add_cxx_flag("-Wsuggest-attribute=const")
	add_cxx_flag("-Wswitch-bool -Wlogical-not-parentheses -Wsizeof-array-argument -Wbool-compare -Wshift-negative-value -Wshift-overflow -Wtautological-compare -Wnull-dereference -Wduplicated-cond")
	add_cxx_flag("-Wmisleading-indentation -Wduplicated-branches -Wregister -Wint-in-bool-context -Wextra -pedantic -Wsign-compare -Wswitch -Wmissing-declarations -Wzero-as-null-pointer-constant -Wsign-conversion -Wsign-promo")
	add_cxx_flag("-Wno-switch-enum -Wno-covered-switch-default -Wno-covered-switch-default -Wno-sign-compare -Wno-weak-vtables -Wno-unused-macros -Wno-missing-variable-declarations")
else()
	message("Warning disabled!")
endif()
